#!/bin/bash
set -x

FAILURE=1
OTA_UPDATE_ACTION=$1
CURR_PACKAGE_PATH=$2
PACKAGE_UPDATE=$3
PACKAGE_UPDATE_SCRIPT=$4


function check_for_directories
{
	install -d $CURR_PACKAGE_PATH/Ping
	install -d $CURR_PACKAGE_PATH/Pong
}

if [ $# -lt 4 ]
then
	echo " $# Provide Action, Path,Package name and script name"
	exit
fi

check_for_directories ## check for directories, create them if not created


if [ "$OTA_UPDATE_ACTION" = "update" ]
then
	if [ -e "$CURR_PACKAGE_PATH/Ping/active" ]
	then
		rm -rf $CURR_PACKAGE_PATH/Pong/* > /dev/null
		cp $PACKAGE_UPDATE $CURR_PACKAGE_PATH/Pong/ ## copy updated package to pong
		cp $PACKAGE_UPDATE_SCRIPT $CURR_PACKAGE_PATH/Pong/ ## copy updated script
		mv $CURR_PACKAGE_PATH/Ping/active $CURR_PACKAGE_PATH/Pong/ ## move active file to pong
	elif [ -e "$CURR_PACKAGE_PATH/Pong/active" ]
	then
		rm -rf $CURR_PACKAGE_PATH/Ping/* > /dev/null
		cp $PACKAGE_UPDATE $CURR_PACKAGE_PATH/Ping/ ## copy updated package to ping
		cp $PACKAGE_UPDATE_SCRIPT $CURR_PACKAGE_PATH/Ping/ ## copy updated script
		mv $CURR_PACKAGE_PATH/Pong/active $CURR_PACKAGE_PATH/Ping/ ## move active file to ping
	else
		rm -rf $CURR_PACKAGE_PATH/Ping/* > /dev/null
		cp $PACKAGE_UPDATE $CURR_PACKAGE_PATH/Ping/
		cp $PACKAGE_UPDATE_SCRIPT $CURR_PACKAGE_PATH/Ping/ ## copy updated script
		touch $CURR_PACKAGE_PATH/Ping/active	
	fi
	sync
elif [ "$OTA_UPDATE_ACTION" = "create" ]
then
	echo "Creating Application Directory"
	mkdir -p $CURR_PACKAGE_PATH/Ping
	mkdir -p $CURR_PACKAGE_PATH/Pong
	echo "Copying package"
	cp $PACKAGE_UPDATE $CURR_PACKAGE_PATH/Ping
	echo "Setting Ping active directory"
	touch $CURR_PACKAGE_PATH/Ping/active	
else
	exit $FAILURE
fi


